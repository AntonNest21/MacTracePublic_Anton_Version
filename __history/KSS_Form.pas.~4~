unit KSS_Form;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, math, Vcl.StdCtrls;

type
  TForm5 = class(TForm)
    CheckBox1: TCheckBox;
    Procedure Circle(D: integer; S: String);
    Procedure Clear();
    Procedure Line(Fi, D: Double);
    Procedure Line_Kss(Fi_1, R1, Fi_2, R2: Double);
    procedure FormActivate(Sender: TObject);
    procedure FormResize(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure CheckBox1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form5: TForm5;
  H, L: integer;
  A: Array [1 .. 8] of TPoint;

implementation

uses Unit1;

{$R *.dfm}

// БЕЗЬЕ //
procedure TForm5.Button1Click(Sender: TObject);
var
  DC: HDC;
begin
  DC := Form5.Canvas.Handle;

  SelectObject(DC, GetStockObject(BLACK_PEN));
  PolyBezier(DC, A, 4);
end;

procedure TForm5.CheckBox1Click(Sender: TObject);
begin
  FormResize(Form5);
end;

procedure TForm5.Circle(D: integer; S: String);
var
  x1, y1, x2, y2, R: integer;
  DC: HDC;
begin
  R := Floor(D / 2) - 1;
  DC := Form5.Canvas.Handle;
  if (R < L / 2) or (R < H / 2) then
  begin
    x1 := Floor(L / 2) + R;
    y1 := Floor(H / 2) - R;
    x2 := Floor(L / 2) - R;
    y2 := Floor(H / 2) + R;
    Canvas.Ellipse(x1, y1, x2, y2);
    // Текст
    Form5.Canvas.Brush.Style := bsSolid;
    SetTextAlign(DC, TA_CENTER);
    Canvas.Font.Size := 10; // от 10 до 16
    Canvas.TextOut(Floor(L / 2), y2 - 20, S);
    Form5.Canvas.Brush.Style := bsClear;
  end
  else
  begin
    // ShowMessage('Радиус окружности Выходит за пределы области отрисовки');
  end;
end;

procedure TForm5.Line(Fi, D: Double);
Var
  x1, y1, x2, y2, R: integer;
  Fi_Z: Double;
  DC: HDC;
begin
  R := Floor(D / 2);

  Fi_Z := Fi + 90;
  DC := Form5.Canvas.Handle;

  x1 := Floor(L / 2);
  y1 := Floor(H / 2);
  x2 := x1 + Floor(R * cos(DegToRad(Fi_Z)));
  y2 := y1 + Floor(R * sin(DegToRad(Fi_Z)));
  Canvas.MoveTo(x1, y1);
  Canvas.LineTo(x2, y2);
  // Текст
  if (Fi > 0) and (Fi <= 180) then
  begin

  end;
  if (Fi > 180) and (Fi <= 360) then
  begin
    Fi := 360 - Fi;
  end;

  if (x2 >= L / 2) and (y2 >= H / 2) then
  begin
    Form5.Canvas.Brush.Style := bsSolid;
    SetTextAlign(DC, TA_TOP);
    Canvas.Font.Size := 10; // от 10 до 16
    Canvas.TextOut(x2 + 3, y2 + 3, FloatToStr(Fi));
    Form5.Canvas.Brush.Style := bsClear;
  end;
  if (x2 >= L / 2) and (y2 <= H / 2) then
  begin
    Form5.Canvas.Brush.Style := bsSolid;
    SetTextAlign(DC, TA_BOTTOM);
    Canvas.Font.Size := 10; // от 10 до 16
    Canvas.TextOut(x2 + 3, y2 + 3, FloatToStr(Fi));
    Form5.Canvas.Brush.Style := bsClear;
  end;
  if (x2 < L / 2) and (y2 < H / 2) then
  begin
    Form5.Canvas.Brush.Style := bsSolid;
    SetTextAlign(DC, TA_BOTTOM);
    Canvas.Font.Size := 10; // от 10 до 16
    Canvas.TextOut(x2 - 20, y2 - 3, FloatToStr(Fi));
    Form5.Canvas.Brush.Style := bsClear;
  end;
  if (x2 < L / 2) and (y2 >= H / 2) then
  begin
    Form5.Canvas.Brush.Style := bsSolid;
    // SetTextAlign(DC, TA_TOP);
    Canvas.Font.Size := 10; // от 10 до 16
    Canvas.TextOut(x2 - 15, y2, FloatToStr(Fi));
    Form5.Canvas.Brush.Style := bsClear;
  end;

end;

procedure TForm5.Line_Kss(Fi_1, R1, Fi_2, R2: Double);
var
  x0, y0, x1, y1, x2, y2, R: integer;
begin
  x0 := Floor(L / 2);
  y0 := Floor(H / 2);

  x1 := x0 + Floor((R1 / 2) * cos(DegToRad(Fi_1)));
  y1 := y0 + Floor((R1 / 2) * sin(DegToRad(Fi_1)));
  x2 := x0 + Floor((R2 / 2) * cos(DegToRad(Fi_2)));
  y2 := y0 + Floor((R2 / 2) * sin(DegToRad(Fi_2)));

  Canvas.Pen.Color := clRed;
  Canvas.Pen.Width := 2;
  Canvas.MoveTo(x1, y1);
  Canvas.LineTo(x2, y2);
  Canvas.Pen.Color := clBlack;
  Canvas.Pen.Width := 1;

end;

procedure TForm5.Clear;
begin
  Form5.Canvas.Brush.Color := clWhite;
  Form5.Canvas.FillRect(Form5.ClientRect);
  PatBlt(Form5.Canvas.Handle, 0, 0, Form5.ClientWidth, Form5.ClientHeight,
    WHITENESS);
end;

procedure TForm5.FormActivate(Sender: TObject);
begin
  FormResize(Form5);
end;

procedure TForm5.FormResize(Sender: TObject);
Var
  I, n, Strk_Po, x0, y0: integer;
  Fi_Shag, Mnoj: Double;
  Array_Po: Array of TPoint;
  DC: HDC;
  A_2: Array [1 .. 1330] of TPoint;
  Style: LOGPEN;
  P: TPoint;
begin
  H := Form5.ClientHeight;
  L := Form5.ClientWidth;
  Clear; // Очистка фона перед перерисовкой
  Form5.Canvas.Brush.Style := bsClear; // без заливкм; bsSolid - с заливкой
  DC := Form5.Canvas.Handle;

  x0 := Floor(L / 2);
  y0 := Floor(H / 2);

  Mnoj := 600 / Max;

  A[1].X := 0;
  A[1].Y := 0;
  A[2].X := 100;
  A[2].Y := 100;
  A[3].X := 200;
  A[3].Y := 200;
  A[4].X := 300;
  A[4].Y := 300;
  A[5].X := 400;
  A[5].Y := 400;
  A[6].X := 500;
  A[6].Y := 500;
  A[7].X := 600;
  A[7].Y := 400;
  A[8].X := 100;
  A[8].Y := 650;

  n := 10; // каждые 20 градусов
  Fi_Shag := 0;

  if CheckBox1.Checked <> true then
  begin
    for I := 0 to (Strk_Kss) - 2 do
    begin
      Line_Kss(Array_Kss[I, 1], Array_Kss[I, 3] * Mnoj, Array_Kss[I + 1, 1],
        Array_Kss[I + 1, 3] * Mnoj);

    end;
  end;

  Strk_Po := 1; // Приращение строк в массиве
  SetLength(Array_Po, Strk_Po);

  if CheckBox1.Checked then
  begin
    for I := 0 to (Strk_Kss) - 1 do
    begin
      // if Array_Kss[i, 3] > 0.1 then
      begin
        A_2[Strk_Po].X := x0 + Floor(((Array_Kss[I, 3] * Mnoj) / 2) *
          cos(DegToRad(Array_Kss[I, 1])));
        A_2[Strk_Po].Y := y0 + Floor(((Array_Kss[I, 3] * Mnoj) / 2) *
          sin(DegToRad(Array_Kss[I, 1])));

        // form1.Memo1.Lines.Add(FloatToStr(Array_Po[Strk_Po-1].X)+' '+FloatToStr(Array_Po[Strk_Po-1].Y));

        inc(Strk_Po); // Приращение строк в массиве
        SetLength(Array_Po, Strk_Po);
      end;
    end;
    Strk_Po := Strk_Po - 2;

    P.X := 2;
    P.Y := 2;
    Style.lopnStyle := PS_SOLID;
    Style.lopnWidth := P;
    Style.lopnColor := RGB(255, 00, 00);
    SelectObject(DC, CreatePenIndirect(Style));
    PolyBezier(DC, A_2, (Floor(Strk_Po / 3) * 3) + 1);
    P.X := 1;
    P.Y := 1;
    Style.lopnStyle := PS_SOLID;
    Style.lopnWidth := P;
    Style.lopnColor := RGB(00, 00, 00);
    SelectObject(DC, CreatePenIndirect(Style));

  end;

  for I := 0 to (360 div n) do
  begin

    Line(Fi_Shag, 600);

    Fi_Shag := Fi_Shag + n;
  end;

  Circle(100, FloatToStr(RoundTo(Max / 6, -3)));
  Circle(200, FloatToStr(RoundTo(Max / 5, -3)));
  Circle(300, FloatToStr(RoundTo(Max / 4, -3)));
  Circle(400, FloatToStr(RoundTo(Max / 3, -3)));
  Circle(500, FloatToStr(RoundTo(Max / 2, -3)));
  Circle(600, FloatToStr(RoundTo(Max, -3)));

end;

end.
